##--------------------------------------------------------------------------
## Pseudokod för inlämningsuppgift OU2 deluppgift 2
##
## Meningen är att du ska översätta pseudokoden till motsvarande
## Python-programsatser så att programmet går att köra.
##----
### Alternativ lösningsmetod för dec2bin(). Arbetar mer bitorienterat
### vilket får den intressanta effekten att dec2bin() fungerar för
### vilket antal bitar som helst! (Prova!)
### Innan du rusar iväg: Övertyga dig om att du är med på vad
### två upphöjt till något heltal ger för resultat!
##----
## Informationsteknologi - Möjligheter och utmaningar, 1DT110
## 2020-10/per.foyer@it.uu.se
##
## (Inledande #-tecken betyder att det som följer är en kommentar)
##---------------------------------------------------------------------------


## Om vi skriver funktioner och procedurer före huvudprogrammet så
## kommer Python att läsa in dem först. I och med det känns funktionerna
## och procedurerna igen när de anropas.

## Proceduren dec2bin() tar här två så kallade formella inparametrar,
## det vill säga data som den ska arbeta med. När proceduren dec2bin()
## anropas (används) ska alltså två värden skickas med.

## Variabeln värde är talet som ska omvandlas till binär form och antal_bitar
## är till det antal bitar värdet ska omvandlas till (t ex 8, 12, 16, 32, ...)
## Biten längst till vänster i ett binärt tal kallar vi för den mest
## signifikanta biten (den mest värda) och den längst till höger för den
## minst signifikanta biten. dec2bin() enligt nedan arbetar från vänster till
## höger och skriver ut precis så många bitar som vi angett när dec2bin()
## anropades 

definiera proceduren dec2bin( värde, antal_bitar )  ## OBS: Antal bitar!
    medan ...
        bitvärde = 2 upphöjt till (antal_bitar - 1)
     
        om värde >= bitvärde så
            skriv ut en etta
            värde = värde - bitvärde    
        annars
            skriv ut en nolla

        antal_bitar = antal_bitar - 1        # Klar med denna bit
    


#----------------------------------------------------------------------------
## Start på huvudprogrammet
## Härifrån anropas funktionen dec2bin() efter att användarens inmatade
## värden kontrollerats (givna inom intervallet 0 till 65535)

## Vi har ju inte börjat huvudprogrammet ännu så invärdet är ju inte ok...

invärde_ok = False
invärde = 0

medan invarde_ok är False
    skriv ut "Ange ett värde:"
    invärde = läs in värde
    om invärde > 65535 så
        skriv ut "Fel. Kan inte hantera sa stora tal. Forsok igen."
    annars
        om invärde < 0 så
            skriv ut "Fel. Kan bara hantera positiva tal. Forsok igen."
        annars
            # Har vi kommit hit är det inlästa värdet inom gränserna
            invärde_ok = True  ### Vilket kommer att bryta "medan-loopen" i nästa varv
            om invärde < 256 så
                skriv ut: "Talet ... ryms i en byte och blir binärt"
                anropa dec2bin( invärde, ...) 
            annars
                skriv ut "Talet ... ryms i 16 bitar och blir binart: "
                anropa dec2bin( invärde, ...) 
                
## Huvudprogram slut!
##---------------------------------------------------------------------------




        